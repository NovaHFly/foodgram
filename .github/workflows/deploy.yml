name: Deploy workflow
on: [workflow_dispatch]

jobs:

  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      
      - name: Create .env
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_DB_HOST: ${{ secrets.DB_HOST }}
          envkey_DB_PORT: ${{ secrets.DB_PORT }}
          envkey_ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
          envkey_DJANGO_SECRET: ${{ secrets.DJANGO_SECRET }}
          envkey_DJANGO_DEBUG: ${{ secrets.DJANGO_DEBUG }}
          envkey_USE_SQLITE: ${{ secrets.USE_SQLITE }}
      
      - name: Copy production config to server via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docker-compose.production.yml,.env,nginx/nginx.conf"
          target: "projects/foodgram"

      - name: Execute remote commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd projects/foodgram
            sudo docker compose -f docker-compose.production.yml pull
            sudo docker compose -f docker-compose.production.yml down
            sudo docker compose -f docker-compose.production.yml up -d
            sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate
            sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic
            sudo docker compose -f docker-compose.production.yml exec backend cp -r /app/collected_static/. /static/static/

  send_deploy_telegram_report:
    runs-on: ubuntu-latest
    needs:
      - deploy

    steps:
    - name: Send success build report
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TG_ID }}
        token: ${{ secrets.TG_TOKEN }}
        message: Проект foodgram успешно задеплоен на сервер!
