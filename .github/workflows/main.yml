name: Main foodgram workflow
on: [push]

jobs:

  test_backend:
    runs-on: ubuntu-latest
    # strategy
    #   matrix:

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./backend/requirements.testing.txt
          pip install -r ./backend/requirements.txt

      - name: Style testing
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
        run: |
          ruff check

  get_changed_images:
    runs-on: ubuntu-latest
    needs:
      - test_backend
    if: github.ref == 'refs/heads/main'

    outputs:
      images_to_build: ${{ steps.output_images.outputs.images_to_build }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          separator: ","
          files: |
            {backend,frontend}/**

      - name: List all changed images
        env:
          ALL_MODIFIED_FILES: ${{ steps.changed-files.outputs.all_modified_files }}
          IMAGES_TO_CHECK: '["frontend", "backend"]'
        shell: python
        run: |
          from os import environ
          import json
          import sys

          def output(data):
              with open(environ.get('GITHUB_ENV'), 'a') as f:
                  f.write(f'IMAGES_TO_BUILD={json.dumps(data)}\n')
              sys.exit(0)

          modified_files = environ.get('ALL_MODIFIED_FILES')
          print(modified_files)
          if not modified_files:
              output([])
          
          files = modified_files.split(',')
          images_to_check = json.loads(environ.get('IMAGES_TO_CHECK'))

          images_to_build = [
              image for image in images_to_check
                  if any(file.startswith(image) for file in files)
          ]

          output(images_to_build)
      
      - name: Output changed images names
        id: output_images
        run: |
          echo ${IMAGES_TO_BUILD}
          echo "images_to_build=${IMAGES_TO_BUILD}" >> $GITHUB_OUTPUT

  build_and_push_changed_images_to_dockerhub:
    runs-on: ubuntu-latest
    needs: get_changed_images
    if: |
      github.ref == 'refs/heads/main' &&
      needs.get_changed_images.outputs.images_to_build != '' &&
      needs.get_changed_images.outputs.images_to_build != '[]'
      
    strategy:
      matrix:
        image: ${{ fromJson( needs.get_changed_images.outputs.images_to_build ) }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push image to dockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.image }}/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-${{ matrix.image }}:latest


  send_build_telegram_report:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_changed_images_to_dockerhub

    steps:
    - name: Send success build report
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TG_ID }}
        token: ${{ secrets.TG_TOKEN }}
        message: Проект foodgram успешно собран!

    - name: Send commit details
      if: github.event_name == 'push'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TG_ID }}
        token: ${{ secrets.TG_TOKEN }}
        message: |
          ${{ github.actor }}: ${{ github.event.head_commit.message }}
          [https://github.com/${{ github.repository }}/commit/${{ github.sha }}]
  
  deploy:
    needs:
      - build_and_push_changed_images_to_dockerhub
    uses: novahfly/foodgram/.github/workflows/deploy.yml@main
    secrets: inherit
    